Parameters:
  myVPC:
    Description: VPC
    Type: String
  SubnetForServer:
    Description: Private subnet for server
    Type: String
  AMItoUse:
    Description: AMI to use
    Type: String
    Default: ami-03c7d01cf4dedc891

Resources:
# IAM Role to allow EC2 Session Manager to access our server
  RoleForSSMAccess:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  
# Instance Profile
  ServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: 
        - !Ref RoleForSSMAccess
    
# Security Group for our server
  WebAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound access to port 80
      VpcId:
        !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

# Server EC2 Instance
  ServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      ImageId: !Ref AMItoUse
      IamInstanceProfile: !Ref ServerInstanceProfile
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: "WebAccessSecurityGroup"
          SubnetId: 
            Ref: "SubnetForServer"
  

